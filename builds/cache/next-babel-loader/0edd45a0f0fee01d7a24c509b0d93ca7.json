{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport '../styles/globals.css';\nimport './Snow.scss';\nimport './AboutMe.css';\nimport './Card.scss';\nimport './app.scss';\nimport './Header.css';\nimport './Contact.scss';\n\nfunction MyApp(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n\n  if (true) {\n    var lazyLoading = function lazyLoading() {\n      var _document$body$getBou = document.body.getBoundingClientRect(),\n          top = _document$body$getBou.top;\n\n      if (top !== 0) {\n        document.getElementById('navbar').classList.add('bg-header');\n      } else {\n        document.getElementById('navbar').classList.remove('bg-header');\n      }\n\n      var boxs = document.querySelectorAll('.fullHeight');\n      var opcFalseBoxs = document.querySelectorAll(\".opcFalse\"); //content\n\n      Array.from(opcFalseBoxs).map(function (box) {\n        if (!inViewport(box, true)) return;\n\n        if (box && box.classList.contains(\"opcFalse\")) {\n          box.classList.add(\"opcTrue\");\n          box.classList.remove(\"opcFalse\");\n        }\n      }); //header\n\n      Array.from(boxs).map(function (box) {\n        if (!inViewport(box, true)) return;\n        var delay = 0.3;\n        var revealText = box.querySelector(\".revealHeader\");\n        if (!revealText) return;\n        if (revealText.classList.contains(\"revealed\")) return;\n        var letters = revealText.textContent.split(\"\");\n        revealText.textContent = \"\";\n        var middle = letters.filter(function (e) {\n          return e !== \" \";\n        }).length / 2;\n        letters.forEach(function (letter, i) {\n          var span = document.createElement(\"span\");\n          if (letter.className === \"fadeTitle\") return;\n          span.className = \"fadeTitle\";\n          span.textContent = letter;\n          span.style.animationDelay = \"\".concat(delay + Math.abs(i - middle) * 0.06, \"s\");\n          revealText.append(span);\n        });\n        revealText.classList.add(\"revealed\");\n      });\n    };\n\n    var inViewport = function inViewport(el) {\n      var partiallyVisible = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      var _el$getBoundingClient = el.getBoundingClientRect(),\n          top = _el$getBoundingClient.top,\n          left = _el$getBoundingClient.left,\n          bottom = _el$getBoundingClient.bottom,\n          right = _el$getBoundingClient.right;\n\n      var _window = window,\n          innerHeight = _window.innerHeight,\n          innerWidth = _window.innerWidth;\n      return partiallyVisible ? (top > 0 && top < innerHeight || bottom > 0 && bottom < innerHeight) && (left >= 0 && left < innerWidth || right > 0 && right < innerWidth) : top >= 0 && left >= 0 && bottom <= innerHeight && right <= innerWidth;\n    };\n\n    document.addEventListener('scroll', lazyLoading);\n  }\n\n  return __jsx(Component, pageProps);\n}\n\nexport default MyApp;","map":null,"metadata":{},"sourceType":"module"}